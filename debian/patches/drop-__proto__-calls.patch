Description: drop __proto__ calls
Author: Yadd <yadd@debian.org>
Forwarded: no
Last-Update: 2022-12-02

--- a/test/cmp.js
+++ b/test/cmp.js
@@ -23,7 +23,7 @@
 }
 
 // eslint-disable-next-line no-proto
-var hasDunderProto = [].__proto__ === Array.prototype;
+var hasDunderProto = Object.getPrototypeOf([]) === Array.prototype;
 
 test('equal', function (t) {
   t.deepEqualTest(
@@ -285,7 +285,7 @@
 
   var maplikeSet = new Set();
   Object.defineProperty(maplikeSet, 'constructor', { enumerable: false, value: Map });
-  maplikeSet.__proto__ = Map.prototype; // eslint-disable-line no-proto
+  Object.setPrototypeOf(maplikeSet, Map.prototype);
   t.deepEqualTest(
     maplikeSet,
     new Map(),
@@ -426,7 +426,7 @@
   t.test('fake Date', { skip: !hasDunderProto }, function (st) {
     var a = new Date(2000);
     var b = tag(Object.create(
-      a.__proto__, // eslint-disable-line no-proto
+      Object.getPrototypeOf(a),
       gOPDs(a)
     ), 'Date');
 
@@ -511,10 +511,10 @@
     var fakeBuffer = {
       0: 'a',
       length: 1,
-      __proto__: emptyBuffer.__proto__, // eslint-disable-line no-proto
       copy: emptyBuffer.copy,
       slice: emptyBuffer.slice
     };
+    Object.setPrototypeOf(fakeBuffer, Object.getPrototypeOf(emptyBuffer));
     Object.defineProperty(fakeBuffer, '0', { enumerable: false });
     Object.defineProperty(fakeBuffer, 'length', { enumerable: false });
     Object.defineProperty(fakeBuffer, 'copy', { enumerable: false });
@@ -538,7 +538,7 @@
         enumerable: false,
         value: emptyBuffer.copy
       });
-      bufferlike.__proto__ = emptyBuffer.__proto__; // eslint-disable-line no-proto
+      Object.setPrototypeOf(bufferlike, Object.getPrototypeOf(emptyBuffer));
 
       s2t.deepEqualTest(
         emptyBuffer,
@@ -827,7 +827,7 @@
   t.test('fake RegExp', { skip: !hasDunderProto }, function (st) {
     var a = /abc/g;
     var b = tag(Object.create(
-      a.__proto__, // eslint-disable-line no-proto
+      Object.getPrototypeOf(a),
       gOPDs(a)
     ), 'RegExp');
 
@@ -930,11 +930,10 @@
   );
 
   t.test('fake error', { skip: !process.env.ASSERT || !hasDunderProto }, function (st) {
-    var a = tag({
-      __proto__: null
-    }, 'Error');
+    var a = tag({}, 'Error');
+    Object.setPrototypeOf(a, null);
     var b = new RangeError('abc');
-    b.__proto__ = null; // eslint-disable-line no-proto
+    Object.setPrototypeOf(b, null);
 
     st.deepEqualTest(
       a,
@@ -990,10 +989,9 @@
 
     st.deepEqualTest(d1, d2, 'two dates with the same timestamp', true, true);
 
-    var newProto = {
-      __proto__: Date.prototype
-    };
-    d2.__proto__ = newProto; // eslint-disable-line no-proto
+    var newProto = {};
+    Object.setPrototypeOf(newProto, Date.prototype);
+    Object.setPrototypeOf(d2, newProto);
     st.ok(d2 instanceof Date, 'd2 is still a Date instance after tweaking [[Prototype]]');
 
     st.deepEqualTest(d1, d2, 'two dates with the same timestamp and different [[Prototype]]', true, false);
@@ -1069,12 +1067,12 @@
 var isBrokenNode = isNode && process.env.ASSERT && semver.satisfies(process.version, '<= 13.3.0');
 test('fake arrays: extra keys will be tested', { skip: !hasDunderProto || isBrokenNode }, function (t) {
   var a = tag({
-    __proto__: Array.prototype,
     0: 1,
     1: 1,
     2: 'broken',
     length: 2
   }, 'Array');
+  Object.setPrototypeOf(a, Array.prototype);
   if (Object.defineProperty) {
     Object.defineProperty(a, 'length', {
       enumerable: false
@@ -1084,7 +1082,7 @@
   t.deepEqualTest(a, [1, 1], 'fake and real array with same contents and [[Prototype]]', false, false);
 
   var b = tag(/abc/, 'Array');
-  b.__proto__ = Array.prototype; // eslint-disable-line no-proto
+  Object.setPrototypeOf(b, Array.prototype);
   b.length = 3;
   if (Object.defineProperty) {
     Object.defineProperty(b, 'length', {
@@ -1138,7 +1136,7 @@
   t.test('Buffer faked as Uint8Array', { skip: typeof Buffer !== 'function' || !Object.create || !hasDunderProto || isNode06 }, function (st) {
     var a = safeBuffer('test');
     var b = tag(Object.create(
-      a.__proto__, // eslint-disable-line no-proto
+      Object.getPrototypeOf(a),
       assign(gOPDs(a), {
         length: {
           enumerable: false,
@@ -1162,7 +1160,7 @@
     /* globals Uint8Array, Int8Array */
     var a = new Uint8Array(10);
     var b = tag(new Int8Array(10), 'Uint8Array');
-    b.__proto__ = Uint8Array.prototype; // eslint-disable-line no-proto
+    Object.setPrototypeOf(b, Uint8Array.prototype);
 
     st.deepEqualTest(
       a,
